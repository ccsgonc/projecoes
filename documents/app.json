[{"name":"app.R","content":"#\r\n# This is a Shiny web application. You can run the application by clicking\r\n# the 'Run App' button above.\r\n#\r\n# Find out more about building applications with Shiny here:\r\n#\r\n#    https://shiny.posit.co/\r\n\r\nlibrary(plotly)\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\nlibrary(readxl)\r\nlibrary(readr)\r\nlibrary(tidyverse)\r\nlibrary(bslib)\r\nlibrary(highcharter)\r\nlibrary(shinydashboard)\r\nlibrary(fresh)\r\nlibrary(openxlsx)\r\n\r\n# options(repos = c(CRAN = \"https://cran.rstudio.com/\"))\r\n\r\n# \r\n# pacotes <- c(\"shiny\", \"plotly\", \"ggplot2\", \"dplyr\", \"readxl\", \"readr\", \"tidyverse\",\r\n#              \"bslib\", \"highcharter\", \"shinydashboard\", \"fresh\", \"openxlsx\")\r\n# \r\n# # Verifica se os pacotes ainda não foi instalados e, caso não, instala:\r\n# \r\n# pacotes_instalados <- pacotes %in% rownames(installed.packages())\r\n# if (any(pacotes_instalados == FALSE)) {\r\n#   install.packages(pacotes[!pacotes_instalados])\r\n# }\r\n# \r\n# # carrega os pacotes instalados:\r\n# \r\n# lapply(pacotes, library, character.only = TRUE)\r\n\r\n\r\n# .libPaths(c(.libPaths(), \"/srv/connect/apps/Projecoes_2025/packages\"))\r\n\r\n\r\n# Exportar\r\n\r\nexport <- list(\r\n  list(text=\"PNG\",\r\n       onclick=JS(\"function () {\r\n                this.exportChartLocal(); }\")),\r\n  list(text=\"JPEG\",\r\n       onclick=JS(\"function () {\r\n                this.exportChartLocal({ type: 'image/jpeg' }); }\"))\r\n)\r\n\r\n# Criar um tema personalizado\r\ncustom_theme <- create_theme(\r\n  adminlte_color(\r\n    light_blue = \"#0080FF\",  # Cor para o cabeçalho e barra lateral\r\n    green = \"#28a745\",       # Cor dos botões e notificações\r\n    red = \"#dc3545\"          # Cor de alertas ou destaques\r\n  ),\r\n  adminlte_sidebar(\r\n    dark_bg = \"#343a40\",     # Cor de fundo da barra lateral\r\n    dark_hover_bg = \"#495057\", # Cor ao passar o mouse nos itens da barra lateral\r\n    dark_color = \"#ffffff\"   # Cor do texto da barra lateral\r\n  ),\r\n  adminlte_global(\r\n    content_bg = \"#f8f9fa\",  # Cor de fundo do corpo do aplicativo\r\n    box_bg = \"#ffffff\",      # Cor de fundo das caixas\r\n    info_box_bg = \"#e9ecef\"  # Cor de fundo das info-boxes\r\n  )\r\n)\r\n\r\n# UI\r\n\r\nui <-  dashboardPage(\r\n  dashboardHeader(title = \"Demografia FJP\",\r\n                  titleWidth = 540),\r\n  dashboardSidebar(sidebarMenu(id = 'barra_lateral',\r\n                               menuItem(\"Introdução\", tabName = 'opcao0', icon = icon(\"gear\")),\r\n                               menuItem(\"Visão geral\", tabName = 'opcao01', icon = icon(\"globe\")),\r\n                               menuItem(\"Pirâmides etárias\", tabName = 'opcao1', icon = icon(\"people-group\")),\r\n                               menuItem(\"Razão de sexo e Taxas\", tabName = 'opcao110', icon = icon(\"bolt\")),\r\n                               menuItem(\"Crescimento por idade\", tabName = 'opcao111', icon = icon(\"chart-line\")),\r\n                               menuItem(\"Razão de dependência\", tabName = 'opcao2', icon = icon(\"brain\")),\r\n                               menuItem(\"Outros indicadores\", tabName = 'opcao3', icon = icon(\"people-roof\")),\r\n                               menuItem(\"Página final\", tabName = 'opcao4', icon = icon(\"umbrella\"))\r\n                               )\r\n                   ),\r\n  dashboardBody(\r\n    use_theme(custom_theme),\r\n    tabItems(\r\n      \r\n      # 1 - Introdução\r\n      tabItem(\r\n        tabName = 'opcao0',\r\n        div(style = \"display: flex; justify-content: space-evenly; align-items: center\",\r\n            img(src = \"Nova-Marca-FJP-sem-fundo.png\", height = 100, width = 110),\r\n            img(src = \"fapemig.png\", height = 100, width = 110)),\r\n        h1(\"Resultados da projeção populacional dos municípios de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 50px;\r\n           font-family: 'Arial'; \r\n           font-size: 26px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        p(\"Neste site são apresentados os resultados da projeção populacional dos municípios\r\n          de Minas Gerais de 2022 até 2047. Em todas as abas à esquerda, é possível visualizar indicadores selecionados \r\n          a nível do município, da região intermediária e do porte populacional. Eles têm a funçaõ de \r\n          demonstrar a tendência demográfica dos municípios ao longo do período de projeção.\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 22px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 50px;\r\n          \"),\r\n        p(\"1 - Na aba Visão geral, são apresentados os resultados do crescimento populacional absoluto por idade e sexo.\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 18px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 50px;\r\n          \"),\r\n        p(\"2 - Na aba Pirâmides etárias, são apresentados as pirâmides etárias por idade e sexo.\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 18px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 25px;\r\n          \"),\r\n        p(\"3 - Na aba Razão de Sexo e taxa de crescimento, são apresentados as razões de sexo por grupo etário e as taxas de crescimento entre anos projetados.\r\n          A razão de sexo pode ser compreendida como a razão entre a quantidade de homens sobre a quantidade de mulheres, enquanto a taxa de crescimento representa o crescimento\r\n          da população entre dois períodos.\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 18px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 25px;\r\n          \"),\r\n        p(\"4 - Na aba Crescimento por idade, são apresentados o crescimento absoluto da população de 0 a 14, de 15 a 60 e de 60 ou mais anos.\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 18px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 25px;\r\n          \"),\r\n        p(\"5 - Na aba Razão de dependência, são apresentadas a razão de dependência total (população com menos de 15 anos e população \r\n          com 65 anos ou mais dividido pela população de 15 a 64 anos), a razão de dependência idosa (população com 65 anos ou mais dividido \r\n          pela população de 15 a 64 anos), e a a razão de dependência jovem (população com menos de 15 anos dividido pela população de 15 a 64 anos).\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 18px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 25px;\r\n          \"),\r\n        p(\"6 - Na aba Outros indicadores, são apresentados o índice de envelhecimento (população com 60, 65 e 80 anos ou mais dividida pela população com menso de 15\r\n          anos), e o crescimento absoluto do percentual da população com 60 e 65 anos ou mais e da população com menso de 5 anos.\", \r\n          style = \"\r\n          font-family: 'Arial'; \r\n          font-size: 18px; \r\n          font-weight: 600; \r\n          color: #333;\r\n          text-align: justify;\r\n          margin-top: 25px;\r\n          \")\r\n      ),\r\n      \r\n      # 2- Visão Geral\r\n      tabItem(\r\n        tabName = 'opcao01',\r\n        \r\n        h1(\"Crescimento absoluto da população de Minas Gerais por idade e sexo\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 24px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        h2(\"Resultados por município, região intermediária, porte populacional e agregado de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 20px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        \r\n        # 🔹 Primeira linha de filtros para o Gráfico 1\r\n        fluidRow(\r\n          style = \"margin-top: 25px;\",\r\n          box(width = 12, title = \"Opções de filtro para o Gráfico 1\",\r\n              solidHeader = TRUE, status = \"primary\", collapsible = TRUE, collapsed = FALSE,\r\n              \r\n              fluidRow(\r\n                column(width = 4,\r\n                       selectInput(inputId = 'nivel_analise1',\r\n                                   label = \"Escolha o nível de análise:\",\r\n                                   choices = c(\"Minas Gerais\" = \"MG\",\r\n                                               \"Município\" = \"nome_mn\",\r\n                                               \"Região intermediária\" = \"nome_rg\",\r\n                                               \"Porte populacional\" = \"portepop\"))\r\n                ),\r\n                column(width = 4,\r\n                       uiOutput(\"filtroUnidade1\") # Filtro dinâmico (seleção única)\r\n                ),\r\n                column(width = 4,\r\n                       selectInput(inputId = 'sexo1',\r\n                                   label = \"Escolha o sexo:\",\r\n                                   choices = c(\"Total\", \"Homens\", \"Mulheres\"),\r\n                                   selected = c(\"Total\", \"Homens\", \"Mulheres\"),\r\n                                   multiple = TRUE)\r\n                )\r\n              )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Segunda linha de filtros para o Gráfico 2\r\n        fluidRow(\r\n          box(width = 12, title = \"Opções de filtro para o Gráfico 2\",\r\n              solidHeader = TRUE, status = \"primary\", collapsible = TRUE, collapsed = FALSE,\r\n              \r\n              fluidRow(\r\n                column(width = 4,\r\n                       selectInput(inputId = 'nivel_analise2',\r\n                                   label = \"Escolha o nível de análise:\",\r\n                                   choices = c(\"Minas Gerais\" = \"MG\",\r\n                                               \"Município\" = \"nome_mn\",\r\n                                               \"Região intermediária\" = \"nome_rg\",\r\n                                               \"Porte populacional\" = \"portepop\"))\r\n                ),\r\n                column(width = 4,\r\n                       uiOutput(\"filtroUnidade2\") # Filtro dinâmico (seleção única)\r\n                ),\r\n                column(width = 4,\r\n                       selectInput(inputId = 'sexo2',\r\n                                   label = \"Escolha o sexo:\",\r\n                                   choices = c(\"Total\", \"Homens\", \"Mulheres\"),\r\n                                   selected = c(\"Total\", \"Homens\", \"Mulheres\"),\r\n                                   multiple = TRUE)\r\n                )\r\n              )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Exibição dos gráficos lado a lado\r\n        fluidRow(\r\n          box(\r\n            width = 6, \r\n            title = \"Gráfico 1\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(outputId = 'grafico1', height = \"500px\")\r\n          ),\r\n          box(\r\n            width = 6, \r\n            title = \"Gráfico 2\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(outputId = 'grafico2', height = \"500px\")\r\n          )\r\n        )\r\n      ),\r\n      \r\n      # 3- Pirâmides\r\n      tabItem(\r\n        tabName = 'opcao1',\r\n        \r\n        h1(\"Pirâmides etárias da população de Minas Gerais projetada por idade e sexo\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 24px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        h2(\"Resultados por município, região intermediária, porte populacional e agregado de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 20px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        \r\n        # 🔹 Primeira linha de filtros para a pirâmide etária 1\r\n        fluidRow(\r\n          style = \"margin-top: 25px;\",\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para a pirâmide etária 1\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e ano da pirâmide 1\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala1\", \"Selecione a Escala (Pirâmide 1):\",\r\n                          choices = c(\r\n                            \"Minas Gerais\" = \"MG\",\r\n                            \"Município\" = \"nome_mn\",\r\n                            \"Região Intermediária\" = \"nome_rg\",\r\n                            \"Porte Populacional\" = \"portepop\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscala1\") # Filtro dinâmico atualizado para nome_mn e nome_rg\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"ano1\", \"Selecione o Ano (Pirâmide 1):\",\r\n                          choices = c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047))\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Segunda linha de filtros para a pirâmide etária 2\r\n        fluidRow(\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para a pirâmide etária 2\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e ano da pirâmide 2\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala2\", \"Selecione a Escala (Pirâmide 2):\",\r\n                          choices = c(\r\n                            \"Minas Gerais\" = \"MG\",\r\n                            \"Município\" = \"nome_mn\",\r\n                            \"Região Intermediária\" = \"nome_rg\",\r\n                            \"Porte Populacional\" = \"portepop\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscala2\") # Filtro dinâmico atualizado para nome_mn e nome_rg\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"ano2\", \"Selecione o Ano (Pirâmide 2):\",\r\n                          choices = c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047))\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Exibição dos gráficos de pirâmides etárias lado a lado\r\n        fluidRow(\r\n          box(\r\n            width = 6,\r\n            title = \"Pirâmide etária 1\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"piramideEtaria1\", height = \"500px\")\r\n          ),\r\n          box(\r\n            width = 6,\r\n            title = \"Pirâmide etária 2\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"piramideEtaria2\", height = \"500px\")\r\n          )\r\n        )\r\n      ),\r\n      \r\n      # RS e TX\r\n      tabItem(\r\n        tabName = 'opcao110', \r\n        \r\n        h1(\"Razão de sexo por idade e taxas de crescimento entre períodos da população projetada de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 24px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        h2(\"Resultados por município, região intermediária e porte populacional\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 20px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        \r\n        # 🔹 Primeira linha de filtros para o Gráfico 1 (Indicadores)\r\n        fluidRow(\r\n          style = \"margin-top: 25px;\",\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para razão de sexo\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e ano\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala_indicador110\", \"Selecione a Escala:\",\r\n                          choices = c(\r\n                            \"Município\" = \"nome_mn\",\r\n                            \"Região Intermediária\" = \"nome_rg\",\r\n                            \"Porte Populacional\" = \"id\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscalaIndicador110\") # Filtro dinâmico\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"ano_indicador110\", \"Selecione o Ano:\",\r\n                          choices = c(\"2022\", \"2025\", \"2026\", \"2027\", \"2032\", \"2037\", \"2042\", \"2047\"),\r\n                          selected = \"2022\")\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Segunda linha de filtros para o Gráfico 2 (Taxas de Crescimento)\r\n        fluidRow(\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para taxas de crescimento\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala e unidade\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala_taxa110\", \"Selecione a Escala:\",\r\n                          choices = c(\r\n                            \"Município\" = \"nome_mn\",\r\n                            \"Região Intermediária\" = \"nome_rg\",\r\n                            \"Porte Populacional\" = \"portepop\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscalaTaxa110\") # Filtro dinâmico\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Exibição dos gráficos lado a lado\r\n        fluidRow(\r\n          box(\r\n            width = 6,\r\n            title = \"Razão de sexo\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"grafico_indicador110\", height = \"500px\")\r\n          ),\r\n          box(\r\n            width = 6,\r\n            title = \"Taxas de crescimento\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"grafico_taxa110\", height = \"500px\")\r\n          )\r\n        )\r\n      ),\r\n      \r\n      # CRESCIMENTO POR IDADE\r\n      \r\n      tabItem(\r\n        tabName = 'opcao111',\r\n        \r\n        h1(\"Crescimento absoluto por grupos etários da população projetada de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 24px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        h2(\"Resultados por município, região intermediária e porte populacional\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 20px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        \r\n        # 🔹 Primeira linha de filtros para o Gráfico 1\r\n        fluidRow(\r\n          style = \"margin-top: 25px;\",\r\n          box(width = 12, title = \"Opções de Filtro para o Gráfico 1\",\r\n              solidHeader = TRUE, status = \"primary\", collapsible = TRUE, collapsed = FALSE,\r\n              fluidRow(\r\n                column(width = 4,\r\n                       selectInput(inputId = 'nivel_analise_pop1',\r\n                                   label = \"Escolha o nível de análise:\",\r\n                                   choices = c(\"Município\" = \"nome_mn\",\r\n                                               \"Região Intermediária\" = \"nome_rg\",\r\n                                               \"Porte Populacional\" = \"portepop\"),\r\n                                   selected = \"nome_mn\")\r\n                ),\r\n                column(width = 4,\r\n                       uiOutput(\"filtroUnidade_pop1\")\r\n                ),\r\n                column(width = 4,\r\n                       selectInput(\"faixa_etaria_pop1\", \"Selecione a faixa etária:\",\r\n                                   choices = c(\"0-14\", \"15-59\", \"60+\"),\r\n                                   selected = c(\"0-14\", \"15-59\", \"60+\"),\r\n                                   multiple = TRUE)\r\n                )\r\n              )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Segunda linha de filtros para o Gráfico 2\r\n        fluidRow(\r\n          box(width = 12, title = \"Opções de Filtro para o Gráfico 2\",\r\n              solidHeader = TRUE, status = \"primary\", collapsible = TRUE, collapsed = FALSE,\r\n              fluidRow(\r\n                column(width = 4,\r\n                       selectInput(inputId = 'nivel_analise_pop2',\r\n                                   label = \"Escolha o nível de análise:\",\r\n                                   choices = c(\"Município\" = \"nome_mn\",\r\n                                               \"Região Intermediária\" = \"nome_rg\",\r\n                                               \"Porte Populacional\" = \"portepop\"),\r\n                                   selected = \"nome_mn\")\r\n                ),\r\n                column(width = 4,\r\n                       uiOutput(\"filtroUnidade_pop2\")\r\n                ),\r\n                column(width = 4,\r\n                       selectInput(\"faixa_etaria_pop2\", \"Selecione a faixa etária:\",\r\n                                   choices = c(\"0-14\", \"15-59\", \"60+\"),\r\n                                   selected = c(\"0-14\", \"15-59\", \"60+\"),\r\n                                   multiple = TRUE)\r\n                )\r\n              )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Exibição dos gráficos lado a lado\r\n        fluidRow(\r\n          box(\r\n            width = 6, \r\n            title = \"Gráfico 1\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(outputId = 'grafico_pop1', height = \"500px\")\r\n          ),\r\n          box(\r\n            width = 6, \r\n            title = \"Gráfico 2\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(outputId = 'grafico_pop2', height = \"500px\")\r\n          )\r\n        )\r\n      ),\r\n      \r\n      # 5- Razão de dependência\r\n      tabItem(\r\n        tabName = 'opcao2',\r\n        \r\n        h1(\"Razão de dependência da população projetada de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 24px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        h2(\"Resultados por município, região intermediária e porte populacional\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 20px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        \r\n        # 🔹 Primeira linha de filtros para o gráfico 1\r\n        fluidRow(\r\n          style = \"margin-top: 25px;\",\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para Gráfico 1\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e tipo de razão de dependência (gráfico 1)\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala11\", \"Selecione a Escala (Gráfico 1):\",\r\n                          choices = c(\r\n                            \"Município\" = \"mn\",\r\n                            \"Região Intermediária\" = \"rg\",\r\n                            \"Porte Populacional\" = \"porte\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscala11\") # Filtro dinâmico atualizado para o gráfico 1\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"tipo_razao11\", \"Tipo de Razão de Dependência (Gráfico 1):\",\r\n                          choices = c(\"Total\", \"Jovem\", \"Idosa\"),\r\n                          selected = \"Total\",\r\n                          multiple = TRUE)\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Segunda linha de filtros para o gráfico 2\r\n        fluidRow(\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para Gráfico 2\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e tipo de razão de dependência (gráfico 2)\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala22\", \"Selecione a Escala (Gráfico 2):\",\r\n                          choices = c(\r\n                            \"Município\" = \"mn\",\r\n                            \"Região Intermediária\" = \"rg\",\r\n                            \"Porte Populacional\" = \"porte\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscala22\") # Filtro dinâmico atualizado para o gráfico 2\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"tipo_razao22\", \"Tipo de Razão de Dependência (Gráfico 2):\",\r\n                          choices = c(\"Total\", \"Jovem\", \"Idosa\"),\r\n                          selected = \"Total\",\r\n                          multiple = TRUE)\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Exibição dos gráficos de razão de dependência lado a lado\r\n        fluidRow(\r\n          box(\r\n            width = 6,\r\n            title = \"Gráfico 1\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"graficoRazao1\", height = \"500px\")\r\n          ),\r\n          box(\r\n            width = 6,\r\n            title = \"Gráfico 2\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"graficoRazao2\", height = \"500px\")\r\n          )\r\n        )\r\n      ),\r\n      \r\n      \r\n      # 6 - Outros indicadores\r\n      tabItem(\r\n        tabName = 'opcao3', \r\n        \r\n        h1(\"Índice de envelhecimento e percentual de indivíduos com menos de 5 anos e com 65 anos ou mais da população projetada de Minas Gerais\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 24px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        h2(\"Resultados por município, região intermediária e porte populacional\", \r\n           style = \"\r\n           margin-top: 10px;\r\n           font-family: 'Arial'; \r\n           font-size: 20px; \r\n           font-weight: bold; \r\n           color: #333;\r\n           text-align: center;\r\n           \"),\r\n        \r\n        # 🔹 Primeira linha de filtros para o gráfico 1 (Índice de Envelhecimento)\r\n        fluidRow(\r\n          style = \"margin-top: 25px;\",\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para o índice de envelhecimento\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e indicador\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala_indicador3\", \"Selecione a Escala:\",\r\n                          choices = c(\r\n                            \"Município\" = \"mn\",\r\n                            \"Região Intermediária\" = \"rg\",\r\n                            \"Porte Populacional\" = \"porte\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscalaIndicador3\") # Filtro dinâmico\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"indicador_idade3\", \"Indicador:\",\r\n                          choices = c(\r\n                            \"Índice de Envelhecimento (60+/0 a 14)\",\r\n                            \"Índice de Envelhecimento (65+/0 a 14)\",\r\n                            \"Índice de Envelhecimento (80+/0 a 14)\"\r\n                          ),\r\n                          selected = \"Índice de Envelhecimento (65+/0 a 14)\",\r\n                          multiple = TRUE)  # Permite seleção múltipla\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Segunda linha de filtros para o gráfico 2 (Percentuais Populacionais)\r\n        fluidRow(\r\n          box(\r\n            width = 12,\r\n            title = \"Opções de filtro para percentuais populacionais\",\r\n            solidHeader = TRUE,\r\n            status = \"primary\",\r\n            collapsible = TRUE,\r\n            collapsed = FALSE,\r\n            \r\n            # 🔹 Filtros para seleção de escala, unidade e tipo de percentual\r\n            column(\r\n              width = 4,\r\n              selectInput(\"escala_percentual3\", \"Selecione a Escala:\",\r\n                          choices = c(\r\n                            \"Município\" = \"mn\",\r\n                            \"Região Intermediária\" = \"rg\",\r\n                            \"Porte Populacional\" = \"porte\"\r\n                          )\r\n              )\r\n            ),\r\n            column(\r\n              width = 4,\r\n              uiOutput(\"filtroEscalaPercentual3\")  # Filtro dinâmico (não alterar)\r\n            ),\r\n            column(\r\n              width = 4,\r\n              selectInput(\"tipo_percentual3\", \"Tipo de Percentual:\",\r\n                          choices = c(\"População com menos de 5 anos\",\r\n                                      \"População com 60 anos ou mais\",\r\n                                      \"População com 65 anos ou mais\"),\r\n                          selected = \"População com menos de 5 anos\",\r\n                          multiple = TRUE)\r\n            )\r\n          )\r\n        ),\r\n        \r\n        # 🔹 Exibição dos gráficos de indicadores lado a lado\r\n        fluidRow(\r\n          box(\r\n            width = 6,\r\n            title = \"Índice de envelhecimento\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"grafico_indicador3\", height = \"500px\")\r\n          ),\r\n          box(\r\n            width = 6,\r\n            title = \"Percentuais populacionais\",\r\n            solidHeader = TRUE,\r\n            status = \"info\",\r\n            collapsible = TRUE,\r\n            highchartOutput(\"grafico_percentual3\", height = \"500px\")\r\n          )\r\n        )\r\n      ),\r\n        tabItem(tabName = 'opcao4')\r\n                         ),\r\n  ))\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output, session) {\r\n  \r\n  # 🔹 1 - VISÃO GERAL DO CRESCIMENTO - Renderizar o filtro de unidades baseado no nível de análise\r\n  # 🔹 Filtro dinâmico para a escala selecionada (Gráfico 1)\r\n  output$filtroUnidade1 <- renderUI({\r\n    req(input$nivel_analise1)\r\n    \r\n    if (input$nivel_analise1 == \"MG\") {\r\n      choices <- \"Minas Gerais\"\r\n      selectInput(\"municipios1\", \"Escolha a unidade:\", choices = choices, selected = \"Minas Gerais\")\r\n    } else if (input$nivel_analise1 == \"nome_mn\") {\r\n      choices <- unique(base_pop_idade_mn_vg$nome_mn)\r\n      selectInput(\"municipios1\", \"Escolha o município:\", choices = choices)\r\n    } else if (input$nivel_analise1 == \"nome_rg\") {\r\n      choices <- unique(base_pop_idade_rg_vg$nome_rg)\r\n      selectInput(\"municipios1\", \"Escolha a região intermediária:\", choices = choices)\r\n    } else {\r\n      choices <- unique(base_pop_idade_porte_vg$portepop)\r\n      selectInput(\"municipios1\", \"Escolha o porte populacional:\", choices = choices)\r\n    }\r\n  })\r\n  \r\n  # 🔹 Filtro dinâmico para a escala selecionada (Gráfico 2)\r\n  output$filtroUnidade2 <- renderUI({\r\n    req(input$nivel_analise2)\r\n    \r\n    if (input$nivel_analise2 == \"MG\") {\r\n      choices <- \"Minas Gerais\"\r\n      selectInput(\"municipios2\", \"Escolha a unidade:\", choices = choices, selected = \"Minas Gerais\")\r\n    } else if (input$nivel_analise2 == \"nome_mn\") {\r\n      choices <- unique(base_pop_idade_mn_vg$nome_mn)\r\n      selectInput(\"municipios2\", \"Escolha o município:\", choices = choices)\r\n    } else if (input$nivel_analise2 == \"nome_rg\") {\r\n      choices <- unique(base_pop_idade_rg_vg$nome_rg)\r\n      selectInput(\"municipios2\", \"Escolha a região intermediária:\", choices = choices)\r\n    } else {\r\n      choices <- unique(base_pop_idade_porte_vg$portepop)\r\n      selectInput(\"municipios2\", \"Escolha o porte populacional:\", choices = choices)\r\n    }\r\n  })\r\n  \r\n  # 🔹 Função para gerar os gráficos\r\n  gerarGraficoPopulacao <- function(nivel_analise, municipios, sexo) {\r\n    req(municipios, sexo, nivel_analise)\r\n    \r\n    dados_final <- list()\r\n    \r\n    for (unidade in municipios) {\r\n      \r\n      if (nivel_analise == \"MG\") {\r\n        dados_base <- pop_minas_gerais\r\n        dados_sexo <- pop_minas_gerais_sexo\r\n        filtro_col <- \"categoria\"  # Coluna fictícia para Minas Gerais\r\n      } else if (nivel_analise == \"nome_mn\") {\r\n        dados_base <- base_pop_idade_mn_vg\r\n        dados_sexo <- base_pop_idade_mn_sexo_vg\r\n        filtro_col <- \"nome_mn\"\r\n      } else if (nivel_analise == \"nome_rg\") {\r\n        dados_base <- base_pop_idade_rg_vg\r\n        dados_sexo <- base_pop_idade_rg_sexo_vg\r\n        filtro_col <- \"nome_rg\"\r\n      } else {\r\n        dados_base <- base_pop_idade_porte_vg\r\n        dados_sexo <- base_pop_idade_porte_sexo_vg\r\n        filtro_col <- \"portepop\"\r\n      }\r\n      \r\n      if (\"Total\" %in% sexo) {\r\n        dados_total <- dados_base %>%\r\n          filter(if (nivel_analise == \"MG\") TRUE else !!sym(filtro_col) == unidade) %>%\r\n          select(ano, pop_total)\r\n        \r\n        dados_final <- append(dados_final, list(\r\n          list(name = paste(unidade, \"(Total)\"), data = list_parse2(dados_total))\r\n        ))\r\n      }\r\n      \r\n      if (\"Homens\" %in% sexo) {\r\n        dados_homens <- dados_sexo %>%\r\n          filter(if (nivel_analise == \"MG\") TRUE else !!sym(filtro_col) == unidade, sexo == \"H\") %>%\r\n          select(ano, pop_total)\r\n        \r\n        dados_final <- append(dados_final, list(\r\n          list(name = paste(unidade, \"(Homens)\"), data = list_parse2(dados_homens))\r\n        ))\r\n      }\r\n      \r\n      if (\"Mulheres\" %in% sexo) {\r\n        dados_mulheres <- dados_sexo %>%\r\n          filter(if (nivel_analise == \"MG\") TRUE else !!sym(filtro_col) == unidade, sexo == \"M\") %>%\r\n          select(ano, pop_total)\r\n        \r\n        dados_final <- append(dados_final, list(\r\n          list(name = paste(unidade, \"(Mulheres)\"), data = list_parse2(dados_mulheres))\r\n        ))\r\n      }\r\n    }\r\n    \r\n    h <- highchart() %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_xAxis(title = list(text = \"Ano\"), categories = c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047)) %>%\r\n      hc_yAxis(\r\n        title = list(text = \"População Total\"),\r\n        labels = list(\r\n          formatter = JS(\"function() {\r\n          if (this.value >= 1000000) {\r\n            return (this.value / 1000000) + 'M';\r\n          } else if (this.value >= 1000) {\r\n            return (this.value / 1000) + 'mil';\r\n          } else {\r\n            return this.value;\r\n          }\r\n        }\")\r\n        )\r\n      ) %>%\r\n      hc_tooltip(shared = TRUE) %>%\r\n      hc_exporting(enabled = TRUE, fallbackToExportServer = FALSE)\r\n    \r\n    for (serie in dados_final) {\r\n      h <- h %>% hc_add_series(name = serie$name, data = serie$data)\r\n    }\r\n    \r\n    return(h)\r\n  }\r\n  \r\n  output$grafico1 <- renderHighchart({\r\n    gerarGraficoPopulacao(input$nivel_analise1, input$municipios1, input$sexo1)\r\n  })\r\n  \r\n  output$grafico2 <- renderHighchart({\r\n    gerarGraficoPopulacao(input$nivel_analise2, input$municipios2, input$sexo2)\r\n  })\r\n  \r\n  \r\n  # 🔹 2 - PIRÂMIDES - Filtro dinâmico para a escala selecionada (Pirâmide 1)\r\n  output$filtroEscala1 <- renderUI({\r\n    req(input$escala1)\r\n    \r\n    if (input$escala1 == \"MG\") {\r\n      selectInput(\"filtro1\", \"Escolha Minas Gerais (Pirâmide 1):\", choices = \"Minas Gerais\", selected = \"Minas Gerais\")\r\n    } else {\r\n      escolhas <- unique(pop_interp_mm_idade_shiny[[input$escala1]])\r\n      selectInput(\"filtro1\", \"Escolha o município, região ou porte (Pirâmide 1):\", choices = escolhas)\r\n    }\r\n  })\r\n  \r\n  # 🔹 Filtro dinâmico para a escala selecionada (Pirâmide 2)\r\n  output$filtroEscala2 <- renderUI({\r\n    req(input$escala2)\r\n    \r\n    if (input$escala2 == \"MG\") {\r\n      selectInput(\"filtro2\", \"Escolha Minas Gerais (Pirâmide 2):\", choices = \"Minas Gerais\", selected = \"Minas Gerais\")\r\n    } else {\r\n      escolhas <- unique(pop_interp_mm_idade_shiny[[input$escala2]])\r\n      selectInput(\"filtro2\", \"Escolha o município, região ou porte (Pirâmide 2):\", choices = escolhas)\r\n    }\r\n  })\r\n  \r\n  # 🔹 Gerar a pirâmide etária 1 com Highcharter\r\n  output$piramideEtaria1 <- renderHighchart({\r\n    req(input$escala1, input$filtro1, input$ano1)\r\n    \r\n    if (input$escala1 == \"MG\") {\r\n      dados_filtrados <- pop_interp_mm_idade_shiny %>%\r\n        filter(ano == input$ano1)\r\n    } else {\r\n      dados_filtrados <- pop_interp_mm_idade_shiny %>%\r\n        filter(!!sym(input$escala1) == input$filtro1, ano == input$ano1)\r\n    }\r\n    \r\n    gerarGraficoPiramide(dados_filtrados, input$filtro1, input$ano1)\r\n  })\r\n  \r\n  # 🔹 Gerar a pirâmide etária 2 com Highcharter\r\n  output$piramideEtaria2 <- renderHighchart({\r\n    req(input$escala2, input$filtro2, input$ano2)\r\n    \r\n    if (input$escala2 == \"MG\") {\r\n      dados_filtrados <- pop_interp_mm_idade_shiny %>%\r\n        filter(ano == input$ano2)\r\n    } else {\r\n      dados_filtrados <- pop_interp_mm_idade_shiny %>%\r\n        filter(!!sym(input$escala2) == input$filtro2, ano == input$ano2)\r\n    }\r\n    \r\n    gerarGraficoPiramide(dados_filtrados, input$filtro2, input$ano2)\r\n  })\r\n  \r\n  # 🔹 Função auxiliar para gerar gráfico de pirâmide etária\r\n  gerarGraficoPiramide <- function(dados, filtro, ano) {\r\n    breaks <- seq(0, 80, by = 5)\r\n    labels <- as.character(breaks)\r\n    labels[length(labels)] <- paste0(breaks[length(labels)], \"+\")\r\n    \r\n    dados_plot <- dados %>%\r\n      mutate(\r\n        pop_menor = ifelse(sexo == \"H\", -pop_menor, pop_menor), # Valores negativos para homens\r\n        faixa_etaria = cut(idade, breaks = c(breaks, Inf), right = FALSE, labels = labels)\r\n      ) %>%\r\n      group_by(faixa_etaria, sexo) %>%\r\n      summarise(populacao = sum(pop_menor), .groups = 'drop') %>%\r\n      pivot_wider(names_from = sexo, values_from = populacao, values_fill = 0) %>%\r\n      arrange(desc(faixa_etaria))\r\n    \r\n    highchart() %>%\r\n      hc_chart(type = \"bar\") %>%\r\n      hc_xAxis(categories = dados_plot$faixa_etaria,\r\n               title = list(text = \"Faixa Etária\"),\r\n               reversed = TRUE) %>%\r\n      hc_yAxis(\r\n        title = list(text = \"População total\"),\r\n        labels = list(formatter = JS(\"function() { return Math.abs(this.value); }\")),\r\n        reversed = FALSE\r\n      ) %>%\r\n      hc_plotOptions(series = list(stacking = \"normal\")) %>%\r\n      hc_add_series(name = \"Homens\", data = dados_plot$H, color = \"#4e79a7\") %>%\r\n      hc_add_series(name = \"Mulheres\", data = dados_plot$M, color = \"#f28e2b\") %>%\r\n      hc_title(text = paste(\"Pirâmide Etária -\", filtro, \"- Ano:\", ano)) %>%\r\n      hc_tooltip(shared = TRUE) %>%\r\n      hc_exporting(enabled = TRUE, fallbackToExportServer = FALSE)\r\n  }\r\n  \r\n  # 3 - RS e TX\r\n  # 🔹 Filtro dinâmico para a escala selecionada (Gráfico 1 - Indicadores)\r\n  output$filtroEscalaIndicador110 <- renderUI({\r\n    req(input$escala_indicador110)\r\n    \r\n    if (input$escala_indicador110 == \"nome_mn\") {\r\n      choices <- unique(rs_mn$nome_mn)\r\n    } else if (input$escala_indicador110 == \"nome_rg\") {\r\n      choices <- unique(rs_rg$nome_rg)\r\n    } else {\r\n      choices <- unique(rs_porte$id)\r\n    }\r\n    \r\n    selectInput(\"unidade_indicador110\", \"Escolha a unidade:\", choices = choices)\r\n  })\r\n  \r\n  # 🔹 Filtro dinâmico para a escala selecionada (Gráfico 2 - Taxas de Crescimento)\r\n  output$filtroEscalaTaxa110 <- renderUI({\r\n    req(input$escala_taxa110)\r\n    \r\n    if (input$escala_taxa110 == \"nome_mn\") {\r\n      choices <- unique(base_tx_mn_total$nome_mn)\r\n    } else if (input$escala_taxa110 == \"nome_rg\") {\r\n      choices <- unique(base_tx_rg_total$nome_rg)\r\n    } else {\r\n      choices <- unique(base_tx_porte_total$portepop)\r\n    }\r\n    \r\n    selectInput(\"unidade_taxa110\", \"Escolha a unidade:\", choices = choices)\r\n  })\r\n  \r\n  # 🔹 Gráfico 1 - Indicadores\r\n  output$grafico_indicador110 <- renderHighchart({\r\n    req(input$escala_indicador110, input$unidade_indicador110, input$ano_indicador110)\r\n    \r\n    dados <- switch(input$escala_indicador110,\r\n                    \"nome_mn\" = rs_mn,\r\n                    \"nome_rg\" = rs_rg,\r\n                    \"id\" = rs_porte)\r\n    \r\n    dados_filtrados <- dados %>%\r\n      filter(if (input$escala_indicador110 == \"nome_mn\") nome_mn == input$unidade_indicador110\r\n             else if (input$escala_indicador110 == \"nome_rg\") nome_rg == input$unidade_indicador110\r\n             else id == input$unidade_indicador110,\r\n             ano == input$ano_indicador110)\r\n    \r\n    highchart() %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_xAxis(categories = unique(dados_filtrados$fe)) %>%\r\n      hc_yAxis(title = list(text = \"Indicador\")) %>%\r\n      hc_add_series(name = \"Razão de sexo\", data = dados_filtrados$indicador) %>%\r\n      hc_tooltip(pointFormat = \"{point.y:.2f}\") %>%\r\n      hc_exporting(enabled = TRUE)\r\n  })\r\n  \r\n  # 🔹 Gráfico 2 - Taxas de Crescimento\r\n  output$grafico_taxa110 <- renderHighchart({\r\n    req(input$escala_taxa110, input$unidade_taxa110)\r\n    \r\n    dados <- switch(input$escala_taxa110,\r\n                    \"nome_mn\" = base_tx_mn_total,\r\n                    \"nome_rg\" = base_tx_rg_total,\r\n                    \"portepop\" = base_tx_porte_total)\r\n    \r\n    dados_filtrados <- dados %>%\r\n      filter(if (input$escala_taxa110 == \"nome_mn\") nome_mn == input$unidade_taxa110\r\n             else if (input$escala_taxa110 == \"nome_rg\") nome_rg == input$unidade_taxa110\r\n             else portepop == input$unidade_taxa110)\r\n    \r\n    highchart() %>%\r\n      hc_chart(type = \"column\") %>%\r\n      hc_xAxis(categories = unique(dados_filtrados$tx_cresc)) %>%\r\n      hc_yAxis(title = list(text = \"Taxa de Crescimento\")) %>%\r\n      hc_add_series(name = \"Taxa de Crescimento\", data = dados_filtrados$valor) %>%\r\n      hc_tooltip(pointFormat = \"{point.y:.4f}\") %>%\r\n      hc_exporting(enabled = TRUE)\r\n  })\r\n  \r\n  # 🔹 4 - CRESC POR IDADE - Filtro dinâmico para a unidade (Gráfico 1)\r\n  \r\n  # 🔹 Atualiza dinamicamente as opções do segundo filtro com base no nível de análise\r\n  output$filtroUnidade_pop1 <- renderUI({\r\n    req(input$nivel_analise_pop1)\r\n    choices <- switch(input$nivel_analise_pop1,\r\n                      \"nome_mn\" = unique(base_pop_idade_mn_total$nome_mn),\r\n                      \"nome_rg\" = unique(base_pop_idade_rg_total$nome_rg),\r\n                      \"portepop\" = unique(base_pop_idade_porte_total$portepop))\r\n    selectInput(\"unidade_pop1\", \"Escolha a unidade:\", choices = choices)\r\n  })\r\n  \r\n  output$filtroUnidade_pop2 <- renderUI({\r\n    req(input$nivel_analise_pop2)\r\n    choices <- switch(input$nivel_analise_pop2,\r\n                      \"nome_mn\" = unique(base_pop_idade_mn_total$nome_mn),\r\n                      \"nome_rg\" = unique(base_pop_idade_rg_total$nome_rg),\r\n                      \"portepop\" = unique(base_pop_idade_porte_total$portepop))\r\n    selectInput(\"unidade_pop2\", \"Escolha a unidade:\", choices = choices)\r\n  })\r\n  \r\n  # 🔹 Atualização dos gráficos com os novos anos e filtros de faixa etária\r\n  criar_grafico <- function(nivel_analise, unidade, faixa_etaria, output_id) {\r\n    req(nivel_analise, unidade, faixa_etaria)\r\n    \r\n    dados_base <- switch(nivel_analise,\r\n                         \"nome_mn\" = base_pop_idade_mn_total,\r\n                         \"nome_rg\" = base_pop_idade_rg_total,\r\n                         \"portepop\" = base_pop_idade_porte_total)\r\n    \r\n    filtro_col <- nivel_analise\r\n    \r\n    dados_final <- dados_base %>%\r\n      filter(!!sym(filtro_col) %in% unidade, faixa_etaria %in% faixa_etaria, ano %in% c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047)) %>%\r\n      group_by(ano, faixa_etaria) %>%\r\n      summarise(pop_total = sum(pop_total, na.rm = TRUE), .groups = \"drop\")\r\n    \r\n    if (nrow(dados_final) == 0) {\r\n      output[[output_id]] <- renderHighchart({ NULL })\r\n      return(NULL)\r\n    }\r\n    \r\n    h <- highchart() %>%\r\n      hc_size(width = 850, height = 500) %>%\r\n      hc_xAxis(title = list(text = \"Ano\"), categories = c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047)) %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_yAxis(\r\n        title = list(text = \"População Total\"),\r\n        labels = list(\r\n          formatter = JS(\"function() {\r\n          if (this.value >= 1000000) {\r\n            return (this.value / 1000000) + 'M';\r\n          } else if (this.value >= 1000) {\r\n            return (this.value / 1000) + 'mil';\r\n          } else {\r\n            return this.value;\r\n          }\r\n        }\")\r\n        )\r\n      ) %>%\r\n      hc_title(text = paste0(\"Evolução Populacional - \", unidade)) %>%\r\n      hc_tooltip(pointFormat = \"{point.y:,.0f}\") %>%\r\n      hc_legend(enabled = TRUE) %>%\r\n      hc_exporting(enabled = TRUE, buttons = list(contextButton = list(menuItems = c('downloadPNG', 'downloadJPEG', 'downloadSVG'))))\r\n    \r\n    for (faixa in faixa_etaria) {\r\n      dados_faixa <- dados_final %>% filter(faixa_etaria == faixa)\r\n      h <- h %>%\r\n        hc_add_series(data = list_parse2(dados_faixa %>% select(ano, pop_total)),\r\n                      name = faixa,\r\n                      type = \"line\")\r\n    }\r\n    \r\n    output[[output_id]] <- renderHighchart({ h })\r\n  }\r\n  \r\n  observeEvent({input$unidade_pop1; input$faixa_etaria_pop1}, {\r\n    criar_grafico(input$nivel_analise_pop1, input$unidade_pop1, input$faixa_etaria_pop1, \"grafico_pop1\")\r\n  })\r\n  \r\n  observeEvent({input$unidade_pop2; input$faixa_etaria_pop2}, {\r\n    criar_grafico(input$nivel_analise_pop2, input$unidade_pop2, input$faixa_etaria_pop2, \"grafico_pop2\")\r\n  })\r\n  \r\n  \r\n  # 🔹 5 - RAZÃO DE DEPENDÊNCIA \r\n  # Função para obter a base de dados correta\r\n  get_razao_base <- function(tipos_razao, escala) {\r\n    bases <- list(\r\n      Total = list(\r\n        mn = razao_dep_total_mn,\r\n        rg = razao_dep_total_rg,\r\n        porte = razao_dep_total_porte\r\n      ),\r\n      Jovem = list(\r\n        mn = razao_dep_jovem_mn,\r\n        rg = razao_dep_jovem_rg,\r\n        porte = razao_dep_jovem_porte\r\n      ),\r\n      Idosa = list(\r\n        mn = razao_dep_idosa_mn,\r\n        rg = razao_dep_idosa_rg,\r\n        porte = razao_dep_idosa_porte\r\n      )\r\n    )\r\n    \r\n    bases_selecionadas <- lapply(tipos_razao, function(tipo) bases[[tipo]][[escala]])\r\n    base_final <- do.call(rbind, bases_selecionadas)\r\n    \r\n    return(base_final)\r\n  }\r\n  \r\n  # 🔹 Filtro dinâmico para Razão de Dependência (Gráfico 1)\r\n  output$filtroEscala11 <- renderUI({\r\n    req(input$escala11, input$tipo_razao11)\r\n    \r\n    base <- get_razao_base(input$tipo_razao11, input$escala11)\r\n    \r\n    coluna_filtro <- switch(input$escala11,\r\n                            \"mn\" = \"nome_mn\",\r\n                            \"rg\" = \"nome_rg\",\r\n                            \"porte\" = \"id\")\r\n    \r\n    selectInput(\"filtroRDP1\", \"Escolha a unidade (Gráfico 1):\",\r\n                choices = unique(base[[coluna_filtro]]))\r\n  })\r\n  \r\n  # 🔹 Filtro dinâmico para Razão de Dependência (Gráfico 2)\r\n  output$filtroEscala22 <- renderUI({\r\n    req(input$escala22, input$tipo_razao22)\r\n    \r\n    base <- get_razao_base(input$tipo_razao22, input$escala22)\r\n    \r\n    coluna_filtro <- switch(input$escala22,\r\n                            \"mn\" = \"nome_mn\",\r\n                            \"rg\" = \"nome_rg\",\r\n                            \"porte\" = \"id\")\r\n    \r\n    selectInput(\"filtroRDP2\", \"Escolha a unidade (Gráfico 2):\",\r\n                choices = unique(base[[coluna_filtro]]))\r\n  })\r\n  \r\n  # 🔹 Gerar gráfico para Razão de Dependência 1\r\n  output$graficoRazao1 <- renderHighchart({\r\n    req(input$escala11, input$filtroRDP1, input$tipo_razao11)\r\n    \r\n    anos_referencia <- unique(razao_dep_total_mn$ano)\r\n    \r\n    h <- highchart() %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_xAxis(categories = anos_referencia, title = list(text = \"Ano\")) %>%\r\n      hc_yAxis(title = list(text = \"Razão de Dependência\")) %>%\r\n      hc_tooltip(shared = TRUE) %>%\r\n      hc_exporting(enabled = TRUE)\r\n    \r\n    for (tipo in input$tipo_razao11) {\r\n      base <- get_razao_base(tipo, input$escala11)\r\n      \r\n      coluna_filtro <- switch(input$escala11,\r\n                              \"mn\" = \"nome_mn\",\r\n                              \"rg\" = \"nome_rg\",\r\n                              \"porte\" = \"id\")\r\n      \r\n      dados_filtrados <- base %>%\r\n        filter(!!sym(coluna_filtro) == input$filtroRDP1) %>%\r\n        arrange(ano)\r\n      \r\n      cor <- if (tipo == \"Total\") \"#0080FF\" else if (tipo == \"Jovem\") \"#FF8000\" else \"#8000FF\"\r\n      \r\n      h <- h %>%\r\n        hc_add_series(name = paste(\"Razão de Dependência -\", tipo),\r\n                      data = dados_filtrados$indicador,\r\n                      color = cor)\r\n    }\r\n    \r\n    h\r\n  })\r\n  \r\n  # 🔹 Gerar gráfico para Razão de Dependência 2\r\n  output$graficoRazao2 <- renderHighchart({\r\n    req(input$escala22, input$filtroRDP2, input$tipo_razao22)\r\n    \r\n    anos_referencia <- unique(razao_dep_total_mn$ano)\r\n    \r\n    h <- highchart() %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_xAxis(categories = anos_referencia, title = list(text = \"Ano\")) %>%\r\n      hc_yAxis(title = list(text = \"Razão de Dependência\")) %>%\r\n      hc_tooltip(shared = TRUE) %>%\r\n      hc_exporting(enabled = TRUE)\r\n    \r\n    for (tipo in input$tipo_razao22) {\r\n      base <- get_razao_base(tipo, input$escala22)\r\n      \r\n      coluna_filtro <- switch(input$escala22,\r\n                              \"mn\" = \"nome_mn\",\r\n                              \"rg\" = \"nome_rg\",\r\n                              \"porte\" = \"id\")\r\n      \r\n      dados_filtrados <- base %>%\r\n        filter(!!sym(coluna_filtro) == input$filtroRDP2) %>%\r\n        arrange(ano)\r\n      \r\n      cor <- if (tipo == \"Total\") \"#0080FF\" else if (tipo == \"Jovem\") \"#FF8000\" else \"#8000FF\"\r\n      \r\n      h <- h %>%\r\n        hc_add_series(name = paste(\"Razão de Dependência -\", tipo),\r\n                      data = dados_filtrados$indicador,\r\n                      color = cor)\r\n    }\r\n    \r\n    h\r\n  })\r\n  # 6🔹- IE E PERCENTUAIS\r\n  # 🔹 Filtro dinâmico para o Índice de Envelhecimento\r\n  output$filtroEscalaIndicador3 <- renderUI({\r\n    req(input$escala_indicador3)\r\n    \r\n    base <- switch(input$escala_indicador3,\r\n                   \"mn\" = indice_de_envelhecimento_mn_60,\r\n                   \"rg\" = indice_de_envelhecimento_rg_60,\r\n                   \"porte\" = indice_de_envelhecimento_porte_60)\r\n    \r\n    coluna_filtro <- switch(input$escala_indicador3,\r\n                            \"mn\" = \"nome_mn\",\r\n                            \"rg\" = \"nome_rg\",\r\n                            \"porte\" = \"portepop\")  # Atualizado para \"portepop\"\r\n    \r\n    selectInput(\"unidade_indicador3\", \"Escolha a unidade:\",\r\n                choices = unique(base[[coluna_filtro]]))\r\n  })\r\n  \r\n  # 🔹 Definição correta do eixo X com todas as categorias de anos\r\n  anos <- unique(indice_de_envelhecimento_mn_60$ano)  # Todos os anos disponíveis\r\n  anos_plotar <- c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047)  # Anos específicos para plotar\r\n  \r\n  # 🔹 Filtro dinâmico para os percentuais populacionais\r\n  output$filtroEscalaPercentual3 <- renderUI({\r\n    req(input$escala_percentual3)\r\n    \r\n    base <- switch(input$escala_percentual3,\r\n                   \"mn\" = percentual_menor_de_5_anos_mn,\r\n                   \"rg\" = percentual_menor_de_5_anos_rg,\r\n                   \"porte\" = percentual_menor_de_5_anos_porte)\r\n    \r\n    coluna_filtro <- switch(input$escala_percentual3,\r\n                            \"mn\" = \"nome_mn\",\r\n                            \"rg\" = \"nome_rg\",\r\n                            \"porte\" = \"id\")\r\n    \r\n    selectInput(\"unidade_percentual3\", \"Escolha a unidade:\",\r\n                choices = unique(base[[coluna_filtro]]))\r\n  })\r\n  \r\n  # 🔹 Definição correta do eixo X com todas as categorias de anos\r\n  anos <- unique(percentual_menor_de_5_anos_mn$ano)  # Todos os anos disponíveis\r\n  # anos_plotar <- c(2022, 2025, 2026, 2027, 2032, 2037, 2042, 2047)  # Anos específicos para plotar\r\n  \r\n  # 🔹 Gerar gráfico para Índice de Envelhecimento\r\n  output$grafico_indicador3 <- renderHighchart({\r\n    req(input$escala_indicador3, input$unidade_indicador3, input$indicador_idade3)\r\n    \r\n    # Define as bases de dados com base no indicador selecionado\r\n    bases_indicadores <- list(\r\n      \"Índice de Envelhecimento (60+/0 a 14)\" = list(\r\n        \"mn\" = indice_de_envelhecimento_mn_60,\r\n        \"rg\" = indice_de_envelhecimento_rg_60,\r\n        \"porte\" = indice_de_envelhecimento_porte_60\r\n      ),\r\n      \"Índice de Envelhecimento (65+/0 a 14)\" = list(\r\n        \"mn\" = indice_de_envelhecimento_mn_65,\r\n        \"rg\" = indice_de_envelhecimento_rg_65,\r\n        \"porte\" = indice_de_envelhecimento_porte_65\r\n      ),\r\n      \"Índice de Envelhecimento (80+/0 a 14)\" = list(\r\n        \"mn\" = indice_de_envelhecimento_mn_80,\r\n        \"rg\" = indice_de_envelhecimento_rg_80,\r\n        \"porte\" = indice_de_envelhecimento_porte_80\r\n      )\r\n    )\r\n    \r\n    # Cria o gráfico\r\n    h <- highchart() %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_xAxis(\r\n        title = list(text = \"Ano\"),\r\n        categories = as.character(anos),  # Todos os anos como categorias\r\n        labels = list(\r\n          step = 1,  # Exibir todos os anos, sem agrupamento\r\n          rotation = -45  # Rotacionar os rótulos para melhor legibilidade\r\n        )\r\n      ) %>%\r\n      hc_yAxis(title = list(text = \"Índice de Envelhecimento\")) %>%\r\n      hc_tooltip(shared = TRUE) %>%\r\n      hc_exporting(enabled = TRUE)\r\n    \r\n    # Adiciona séries para cada indicador selecionado\r\n    for (indicador in input$indicador_idade3) {\r\n      base <- bases_indicadores[[indicador]][[input$escala_indicador3]]\r\n      \r\n      coluna_filtro <- switch(input$escala_indicador3,\r\n                              \"mn\" = \"nome_mn\",\r\n                              \"rg\" = \"nome_rg\",\r\n                              \"porte\" = \"portepop\")  # Atualizado para \"portepop\"\r\n      \r\n      dados_filtrados <- base %>%\r\n        filter(!!sym(coluna_filtro) == input$unidade_indicador3, ano %in% anos) %>%\r\n        arrange(ano)\r\n      \r\n      h <- h %>%\r\n        hc_add_series(name = paste(input$unidade_indicador3, \"-\", indicador), \r\n                      data = dados_filtrados$indicador)\r\n    }\r\n    \r\n    h\r\n  })\r\n  \r\n  # 🔹 Gerar gráfico para Percentuais Populacionais\r\n  output$grafico_percentual3 <- renderHighchart({\r\n    req(input$escala_percentual3, input$unidade_percentual3, input$tipo_percentual3)\r\n    \r\n    bases <- list(\r\n      \"População com menos de 5 anos\" = list(\r\n        \"mn\" = percentual_menor_de_5_anos_mn,\r\n        \"rg\" = percentual_menor_de_5_anos_rg,\r\n        \"porte\" = percentual_menor_de_5_anos_porte\r\n      ),\r\n      \"População com 65 anos ou mais\" = list(\r\n        \"mn\" = percentual_maior_de_65_anos_mn,\r\n        \"rg\" = percentual_maior_de_65_anos_rg,\r\n        \"porte\" = percentual_maior_de_65_anos_porte\r\n      ),\r\n      \"População com 60 anos ou mais\" = list(\r\n        \"mn\" = percentual_maior_de_60_anos_mn,\r\n        \"rg\" = percentual_maior_de_60_anos_rg,\r\n        \"porte\" = percentual_maior_de_60_anos_porte\r\n      )\r\n    )\r\n    \r\n    h <- highchart() %>%\r\n      hc_chart(type = \"line\") %>%\r\n      hc_xAxis(title = list(text = \"Ano\"), categories = anos) %>%\r\n      hc_yAxis(title = list(text = \"Percentual da População\")) %>%\r\n      hc_tooltip(pointFormat = \"{point.y:,.0f}\") %>%\r\n      hc_exporting(enabled = TRUE)\r\n    \r\n    for (tipo in input$tipo_percentual3) {\r\n      base <- bases[[tipo]][[input$escala_percentual3]]\r\n      \r\n      coluna_filtro <- switch(input$escala_percentual3,\r\n                              \"mn\" = \"nome_mn\",\r\n                              \"rg\" = \"nome_rg\",\r\n                              \"porte\" = \"id\")\r\n      \r\n      dados_filtrados <- base %>%\r\n        filter(!!sym(coluna_filtro) == input$unidade_percentual3, ano %in% anos) %>%\r\n        arrange(ano)\r\n      \r\n      h <- h %>%\r\n        hc_add_series(name = paste(input$unidade_percentual3, \"-\", tipo), \r\n                      data = dados_filtrados$indicador)\r\n    }\r\n    \r\n    h\r\n  })\r\n  \r\n}\r\n\r\n# Run the application\r\nshinyApp(ui = ui, server = server)\r\n\r\n","type":"text"}]
